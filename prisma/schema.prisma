generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model feedback {
  id      String @id
  message String
  ip      String
}

model leaderboard {
  id                    String                 @id
  device_id             String                 @unique(map: "leaderboard_index")
  device_dob            DateTime               @db.Timestamp(6)
  device_name           String
  total_dabs            Int
  owner_name            String
  last_active           DateTime               @default(now()) @db.Timestamp(6)
  last_ip               String?
  device_model          String?
  user_id               String?
  users                 users?                 @relation(fields: [user_id], references: [id])
  leaderboard_positions leaderboard_positions?
}

model users {
  id            String        @id
  platform      String        @default("discord")
  platform_id   String        @unique(map: "pltid_pkey")
  name          String
  image         String?
  flags         Int           @default(0)
  refresh_token String
  devices       devices[]
  leaderboard   leaderboard[]
}

model diagnostics {
  id                      String    @id(map: "diag_pkey")
  device_name             String
  device_firmware         String
  device_git_hash         String?
  device_uptime           Int?
  device_utc_time         Int?
  device_battery_capacity Int?
  device_model            String
  device_uid              String?
  device_chamber_type     Int?      @db.SmallInt
  device_dob              DateTime? @db.Timestamp(6)
  device_profiles         Json?
  device_services         Json[]
  lorax                   Boolean   @default(false)
  pup                     Boolean   @default(false)
  authenticated           Boolean   @default(false)
  user_agent              String
  ip                      String
  session_id              String?
  device_serial_number    String?
  device_hardware_version String?
  device_mac              String?
}

model leaderboard_positions {
  device_id   String      @id
  position    Int
  leaderboard leaderboard @relation(fields: [device_id], references: [device_id], onDelete: Cascade)
}

model old_diagnostics {
  id              String @id(map: "diagnostics_pkey")
  device_name     String
  device_firmware String
  device_model    String
  user_agent      String
  ip              String
}

model strains {
  id       String  @id
  name     String?
  slug     String?
  platform String?
  species  String?
  thc      String?
  cbd      String?
}

model device_leaderboard {
  id       String  @id
  position Int
  devices  devices @relation(fields: [id], references: [id], onDelete: Cascade)
}

model devices {
  id                 String              @id
  mac                String              @unique(map: "mac_unq")
  name               String              @default("N/A")
  dabs               Int
  avg_dabs           Float               @default(0.0) @db.Real
  model              String              @default("0")
  firmware           String
  hardware           Int
  git_hash           String
  serial_number      String?
  dob                DateTime            @db.Timestamp(6)
  last_active        DateTime            @default(now()) @db.Timestamp(6)
  last_ip            String?
  user_id            String?
  profiles           Json?
  device_leaderboard device_leaderboard?
  users              users?              @relation(fields: [user_id], references: [id], onDelete: Cascade)
}
